%   function [data,parameters] = readArchmanfile (filename,flag)%   Read binary file writtten in Yi-Qiao Song's format.%   The first 20 lines contain the header information. %	The data are stored as complex numbers.                     %   flag = 0: do not show messages during execution.%   %   June 2003%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [data,parameters] = readArchmanfile (filename,flag)if nargin <2    flag = 0;end%Open the file containing the datafid = fopen(filename,'r');if (fid == -1) fprintf(1, 'Error opening file %s. Does it exist ??\n', filename); return; end;%Read the header and get info about echo-spacing, number of wait times and number of echoes%read 1 kB[header, COUNT]  = fread(fid,1024,'uchar');line = setstr(header)';k = findstr(line, 'end_of_header');if(isempty(k))	fprintf(1,'This file is not in Archman format and it will be read as a float binary file.\n');	frewind(fid);	[A,COUNT] = fread(fid,inf,'float32');	fclose(fid);else    if flag == 1        fprintf(1,'This file is in Archman format and the header will be read.\n');       	fprintf(1, 'Parsing header ...\n');    end	fseek(fid,k+13,'bof');	[A,COUNT] = fread(fid,inf,'float32');    fclose(fid);      % Find number of recovery times	 k = findstr(line, 'al1');	if (~isempty(k) )            al1 = sscanf(line(k+6:end),'%g', 1); 	 end      % Find number of echoes in CPMG sequence    k = findstr(line,'al2');    if (~isempty(k))  	al2 = sscanf(line(k+6:end),'%g',1);     end      % Find dwell1     k = findstr(line, 'dwell1');    if (~isempty(k))        dw1 = sscanf(line(k+9:end),'%g',1);    end   % Find dwell2     k = findstr(line, 'dwell2');    if (~isempty(k))        dw2 = sscanf(line(k+9:end),'%g',1);    end   % Find sf1     k = findstr(line, 'sf1');    if (~isempty(k))        sf1 = sscanf(line(k+9:end),'%g',1);    end   % Find sf2     k = findstr(line, 'sf2');    if (~isempty(k))        sf2 = sscanf(line(k+9:end),'%g',1);    end        % Find vdlist    k = findstr(line, 'time_list =');    if isempty(k) == 0        k1 = findstr(line(k:end),'list size =');        if isempty(k) == 0            td1 = sscanf(line(k+k1+length('list size ='):end),'%d',1);            vdlist = sscanf(line(k+k1+length('list size ='):end),'%g',1+td1);            Tau1_list = vdlist(2:end);        end    endend   vdlist = Tau1_list;Number_data = length(A);if ( Number_data ~= al1*al2*2)   fprintf(1, 'Error in number of data points. \n');   fprintf(1, 'Make sure that you have the right set of files\n');else   data = A(1:2:end) + A(2:2:end)*1i;   data = reshape(data,al2,al1);      parameters.dw1 = dw1;   parameters.dw2 = dw2;   parameters.vd = vdlist;   parameters.sf1 = sf1;   parameters.sf2 = sf2;   parameters.fn  = filename;   parameters.f2 = (-al2/2:al2/2-1)/al2/dw2;   parameters.t2 = (0:al2-1)*dw2;     end